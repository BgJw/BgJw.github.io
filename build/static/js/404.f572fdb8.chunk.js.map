{"version":3,"file":"static/js/404.f572fdb8.chunk.js","mappings":"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","sources":["components/Breadcrumbs/Breadcrumbs.tsx","components/MyButtons/MyButtons.tsx","Hooks/useBadge.ts","pages/ComparePage/Component.tsx","pages/ComparePage/ComparePage.tsx"],"sourcesContent":["import { Link, useLocation, useNavigate } from 'react-router-dom';\nimport './Breadcrumbs.scss';\n\n\nconst Breadcrumbs = () => {\n    const {pathname} = useLocation();\n    const navigate = useNavigate();\n    \n    return (\n        <div className='bread'>\n            <Link to={'/'}>Home</Link>\n            /\n            <button onClick={() => navigate(-1)}>\n                Back\n            </button>\n            {\n            pathname !== '/filter' &&\n            <>\n                /\n                <Link to={'/filter'}>\n                    Filter\n                </Link>\n            </>\n            }\n        </div>\n    );\n};\n\nexport default Breadcrumbs;","import { memo } from 'react';\nimport { useBadge } from '../../Hooks/useBadge';\nimport { useAppDispatch, useAppSelector } from '../../Hooks/useDispatch_Selector';\nimport { incrementBadge, decrementBadge, addDataBadge, removeDataBadge } from '../../Slices/BadgeSlice';\nimport { BadgeType, IClothesService } from '../../types/Types';\n\ninterface IProps {\n    on?: string;\n    off?: string;\n    type: BadgeType;\n    product: IClothesService;\n    sizeForCart?: string[];\n}\n\nconst MyButtons = memo(({ on, off, type, product, sizeForCart }: IProps) => {\n    const { isCheckId } = useBadge();\n    const dispatch = useAppDispatch();\n    const data = useAppSelector(state => state.BadgeSlice[type].data);\n\n    const badge = isCheckId(data, product);\n\n    const style = () => {\n        if (type === BadgeType.favorite) {\n            return !badge ? 'bttn__link bttnFavoritesOn' : 'bttn__link bttnFavoritesOff';\n        }\n        if (type === BadgeType.compare) {\n            return !badge ? 'bttn__link bttnCompareOff' : 'bttn__link bttnCompareOn';\n        }\n        if (type === BadgeType.cart) {\n            return !badge ? 'bttnCartOn' : 'bttnCartOff';\n        }\n        return ''; \n    };\n\n    return (\n        !badge ? (\n            <button\n                className={style()}\n                aria-label={type}\n                onClick={() => {\n                    dispatch(incrementBadge(type));\n                    dispatch(addDataBadge({ name: type, data: { ...product, size: sizeForCart } as IClothesService }));\n                }}\n            >\n                {on}\n            </button>\n        ) : (\n            <button\n                className={style()}\n                onClick={() => {\n                    dispatch(decrementBadge(type));\n                    dispatch(removeDataBadge({ name: type, data: product }));\n                }}\n            >\n                {off}\n            </button>\n        )\n    );\n});\n\nexport default MyButtons;\n","import { useCallback } from 'react';\nimport { IClothesService } from '../types/Types';\n\nexport const useBadge = () => {\n    const isCheckId = useCallback((data: IClothesService[], product: IClothesService) => {\n        return data.some(el => el.id === product.id);\n    }, []);\n\n    return { isCheckId };\n};\n","import { Link } from 'react-router-dom';\nimport { BadgeType, IClothesService } from '../../types/Types';\nimport MyButtons from '../../components/MyButtons/MyButtons';\n\ninterface IProps {\n    el: IClothesService,\n    i: number\n};\n\nconst Component = ({ el, i }: IProps) => {\n\n    return (\n        <div className='compare'>\n            <Link to={`/product/${el.id}`} >\n                <img className='compare__img' src={el.urls.regular} alt={el.alt_description} />\n            </Link>\n            <div className='compare__information'>\n                <p className='compare__information-p'>{el.alt_description}</p>\n               \n                <div className='compare__information-bttn'>\n                        <MyButtons\n                            type={BadgeType.compare}\n                            product={el}\n                        />\n                        <MyButtons\n                            type={BadgeType.favorite}\n                            product={el}\n                        />\n                </div>\n                <div className='compare__information-feather'>\n                    <small>{i === 0 && 'Price'}</small> <p>{el.price} $</p>\n                    <small>{i === 0 && 'Material'}</small> <p> {el.material}</p>\n                    <small>{i === 0 && 'Country'}</small> <p> {el.country}</p>\n\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Component;","import { useAppSelector } from '../../Hooks/useDispatch_Selector';\nimport Component from './Component';\nimport { Helmet } from \"react-helmet\";\nimport './ComparePage.scss';\nimport Breadcrumbs from '../../components/Breadcrumbs/Breadcrumbs';\n\nconst ComparePage = () => {\n    const compare = useAppSelector(state => state.BadgeSlice.compare);\n    \n    return (\n        <>\n            <Helmet>\n                <title>Your Compare</title>\n            </Helmet>\n            <Breadcrumbs />\n            <h2 className='pageName'>Compare</h2>\n            {\n                compare.data.length ?\n                    <div className='container'>\n{                        compare.data.map((el, i) => (\n                        <Component el={el} key={el.id} i={i}/>\n                        ))}\n                    </div>\n                    :\n                    <h3 className='pageEmpty'>Compare list is empty</h3>\n            }\n        </>\n    );\n};\n\nexport default ComparePage;"],"names":["Breadcrumbs","pathname","useLocation","navigate","useNavigate","_jsxs","className","children","_jsx","Link","to","onClick","_Fragment","memo","_ref","on","off","type","product","sizeForCart","isCheckId","useCallback","data","some","el","id","dispatch","useAppDispatch","badge","useAppSelector","state","BadgeSlice","style","BadgeType","favorite","compare","cart","decrementBadge","removeDataBadge","name","incrementBadge","addDataBadge","_objectSpread","size","i","concat","src","urls","regular","alt","alt_description","MyButtons","price","material","country","ComparePage","Helmet","length","map","Component"],"sourceRoot":""}