{"version":3,"file":"static/js/854.579e38f2.chunk.js","mappings":"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","sources":["components/Breadcrumbs/Breadcrumbs.tsx","components/MyButtons/MyButtons.tsx","Hooks/useBadge.ts","components/Products/Products.tsx","pages/FilterPage/MyInput.tsx","pages/FilterPage/FilterOptions.tsx","pages/FilterPage/FilterPage.tsx"],"sourcesContent":["import { Link, useLocation, useNavigate } from 'react-router-dom';\nimport './Breadcrumbs.scss';\n\n\nconst Breadcrumbs = () => {\n    const {pathname} = useLocation();\n    const navigate = useNavigate();\n    \n    return (\n        <div className='bread'>\n            <Link to={'/'}>Home</Link>\n            /\n            <button onClick={() => navigate(-1)}>\n                Back\n            </button>\n            {\n            pathname !== '/filter' &&\n            <>\n                /\n                <Link to={'/filter'}>\n                    Filter\n                </Link>\n            </>\n            }\n        </div>\n    );\n};\n\nexport default Breadcrumbs;","import { memo, useEffect } from 'react';\nimport { useBadge } from '../../Hooks/useBadge';\nimport { useAppDispatch, useAppSelector } from '../../Hooks/useDispatch_Selector';\nimport { incrementBadge, decrementBadge, addDataBadge, removeDataBadge } from '../../Slices/BadgeSlice';\nimport { BadgeType, IClothesService } from '../../types/Types';\n\ninterface IProps{\n    on?: string,\n    off?: string,\n    type: BadgeType,\n    product: IClothesService,\n    sizeForCart?: string[]\n}\n\nconst MyButtons = memo( ({ on, off, type, product, sizeForCart }: IProps) => {\n    \n    const style = () => { \n        if(type === BadgeType.favorite){\n            return !badge ? 'bttn__link bttnFavoritesOn' : 'bttn__link bttnFavoritesOff';\n        }\n        if(type === BadgeType.compare){\n            return !badge ? 'bttn__link bttnCompareOff' : 'bttn__link bttnCompareOn'\n        }\n        if(type === BadgeType.cart){\n            return !badge ? 'bttnCartOn' : 'bttnCartOff';\n        }\n    }\n    const {badge, isCheckId, changeBadge} = useBadge();\n    const data = useAppSelector(state => state.BadgeSlice[type].data);\n    const dispatch = useAppDispatch();    \n    \n\n    useEffect(()=> { isCheckId(data, product) } , [product])\n    \n\n\n    return (\n        !badge?\n            <button \n                className={ style() }\n                aria-label={type}\n                onClick={ () => {\n                    dispatch(incrementBadge(type))\n                    dispatch(addDataBadge({name: type, data: {...product, size: sizeForCart} as IClothesService}))\n                    changeBadge()\n                }}\n            >\n            {on}\n            </button>\n        :\n            <button \n                className={ style() }\n                onClick={ () => {\n                    dispatch(decrementBadge(type))\n                    dispatch(removeDataBadge({name: type, data: product}))\n                    changeBadge()\n                }}\n            >\n                {off}\n            </button>\n    );\n});\n\nexport default MyButtons;","import {useCallback, useState} from 'react';\nimport { IClothesService } from '../types/Types';\n\nexport const useBadge = ( ) => {\n\n    const [badge, setbadge] = useState<boolean>(false);\n\n    const changeBadge = useCallback(() => setbadge( badge => !badge), []);\n\n    const isCheckId = (data: IClothesService[], product: IClothesService) => { \n          \n            data.find(el => el.id === product.id && changeBadge())\n    };\n\n\n    return {\n        badge,\n        changeBadge,\n        isCheckId\n    }\n};","import { Link } from 'react-router-dom';\r\nimport './Products.scss';\r\nimport MyButtons from '../MyButtons/MyButtons';\r\nimport { BadgeType, IClothesService } from '../../types/Types';\r\n\r\ninterface IProduct {\r\n    product: IClothesService,\r\n    i: number\r\n}\r\n\r\nconst Products = ({ product, i }: IProduct) => {\r\n\r\n    return (\r\n        <div className='product'>\r\n            <div className='product__img'>\r\n                <MyButtons\r\n                    type={BadgeType.favorite}\r\n                    product={product}\r\n                />\r\n                <Link to={`/product/${product.id}`} aria-label={`View details of ${product.alt_description}`}>\r\n                    <img\r\n                        className='product__img-photo lazy'\r\n                        src={product.urls.thumb}\r\n                        srcSet={`\r\n                            ${product.urls.thumb} 600w,\r\n                            ${product.urls.small} 900w,\r\n                        `}\r\n                        sizes=\"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw\"\r\n                        alt={product.alt_description}\r\n                        width={200}\r\n                        height={300}\r\n                        loading={ i < 6 ? 'eager' : 'lazy'}\r\n                    />\r\n                </Link>\r\n            </div>\r\n\r\n            <div className='product__preview'>\r\n                <div className='product__preview-title'>{product.alt_description}</div>\r\n                <div className='product__preview-buy'>\r\n                    <p>{product.price} $</p>\r\n                    <Link to={`/product/${product.id}`} aria-label='add to cart' />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Products;\r\n","import { memo } from \"react\";\nimport { IFilter } from \"./FilterPage\";\n\ninterface IProps {\n    name: string,\n    data: string[],\n    filterOption: IFilter,\n    setFilter: (value: React.SetStateAction<IFilter>) => void\n};\n\nconst MyInput = memo(({ name, data, filterOption, setFilter }: IProps) => {\n\n    type key = keyof typeof filterOption;\n\n    const isCheck = (e: { target: HTMLInputElement }, name: string) => {\n\n        let filterName = filterOption[name as key] as string[];\n        \n        !e.target.checked ?\n            filterName = filterName.filter(size => size !== e.target.name)\n            :\n            filterName.push(e.target.name);\n\n            setFilter({\n            ...filterOption,\n            [name]: filterName\n        });}\n\n\n    return (\n            <div className='input'>\n                <span>\n                    {name}:\n                </span>\n                {data.map((el) => (\n                    <label\n                        key={el}\n                        className='input__label'>\n                            {el}\n                        <input\n                            type=\"checkbox\"\n                            checked={ filterOption[name as key].includes(el)}\n                            className='input__checkbox'\n                            name={el}\n                            onChange={(e) => { isCheck(e, name) }}\n                        />\n                        <span className=\"checkmark\" />\n                    </label>\n                ))}\n\n            </div>\n    );\n});\n\nexport default MyInput;\n\n\n\n","import React, { memo, useEffect, useState } from 'react';\nimport { country, materials, sizes } from '../../services/ClothesService';\nimport MyInput from './MyInput';\nimport { IFilter } from './FilterPage';\n\ninterface IProps {\n    setFilterOptions: React.Dispatch<React.SetStateAction<IFilter>>,\n    filterOptions: IFilter\n}\nconst FilterOptions = memo(({ filterOptions, setFilterOptions }: IProps) => {\n\n\n\n    // open filter options\n    const [isOpenFilter, setIsOpenFilter] = useState(false);\n    const [popUp, setPopUp] = useState(true);\n\n\n    const clearAll = () => {\n        setFilterOptions({\n            text: '',\n            price: '150',\n            size: [],\n            country: [],\n            material: [],\n        });\n\n    }\n    useEffect(() => {\n\n        setTimeout(() => {\n            setPopUp(false);\n        }, 10000);\n    }, [])\n\n    return (\n        <>\n            <div className={`filter__position ${isOpenFilter ? 'active' : ''}`}>\n                <h2>How to filter things?</h2>\n                {/* search for filter products */}\n                <div className='filter__position__search'>\n                    <div className='bttnOptions'>\n                        {\n                            popUp && <div className='helpers'>More options &#8681;</div>\n                        }\n                        <button onClick={() => { setIsOpenFilter(prev => !prev); setPopUp(false) }} />\n                    </div>\n                    <input\n                        value={filterOptions.text}\n                        type=\"text\"\n                        placeholder='Search'\n                        className='filter__position__search-input'\n                        onChange={(e) => { setFilterOptions({ ...filterOptions, text: e.target.value }) }}\n                    />\n                    <button\n                        className='filter__position__search-bttn'\n                    />\n                </div>\n            </div>\n            <div className={`filter__options ${isOpenFilter && 'active'}`}>\n                <div className='price'>\n                    <span>\n                        Price:\n                    </span>\n                    <input\n                        type=\"range\"\n                        min={35}\n                        max={150}\n                        value={filterOptions.price}\n                        onChange={(e) => { setFilterOptions({ ...filterOptions, price: e.target.value }) }}\n                    />\n                    <div>\n                        Up to:\n                        <input\n                            type=\"number\"\n                            value={filterOptions.price}\n                            onChange={(e) => setFilterOptions({ ...filterOptions, price: e.target.value })}\n                        />\n                    </div>\n                    <button\n                        className='bttnClearAll'\n                        onClick={clearAll}>\n                        Clear all\n                    </button>\n                </div>\n                {/* size  */}\n                <MyInput\n                    data={sizes}\n                    name='size'\n                    filterOption={filterOptions}\n                    setFilter={setFilterOptions}\n                />\n\n                {/* country */}\n                <MyInput\n                    data={country}\n                    name='country'\n                    filterOption={filterOptions}\n                    setFilter={setFilterOptions}\n                />\n                {/* material */}\n                <MyInput\n                    data={materials}\n                    name='material'\n                    filterOption={filterOptions}\n                    setFilter={setFilterOptions}\n                />\n            </div>\n        </>\n    );\n});\n\nexport default FilterOptions;","import { useEffect, useState } from 'react';\nimport { useAppSelector } from '../../Hooks/useDispatch_Selector';\nimport { IClothesService } from '../../types/Types';\nimport Breadcrumbs from '../../components/Breadcrumbs/Breadcrumbs';\nimport Products from '../../components/Products/Products';\nimport { Helmet } from \"react-helmet\";\nimport FilterOptions from './FilterOptions';\nimport './FilterPage.scss';\n\nexport interface IFilter {\n    text: string,\n    price: string,\n    country: string[],\n    material: string[],\n    size: string[]\n}\n\n\nconst FilterPage = () => {\n\n    const { productsMan, productsWoman } = useAppSelector(state => state.ProductSlice);\n\n    const [copyData, setCopyData] = useState<IClothesService[]>([]);\n    const [filterOptions, setFilterOptions] = useState<IFilter>({\n        text: '',\n        price: '150',\n        country: [],\n        material: [],\n        size: []\n    });\n    const filterClothers = (data: IClothesService[]) => {\n        let copy = [...data];\n\n        if (filterOptions.text.trim()) {\n            copy = copy.filter(el => el.alt_description.includes(filterOptions.text));\n        }\n        if (filterOptions.price) {\n            copy = copy.filter(el => Number(el.price) <= Number(filterOptions.price))\n        }\n        if (filterOptions.size.length > 0) {\n\n            copy = isAvailabilityOptions(copy, filterOptions.size, 'sizes')\n        }\n        if (filterOptions.country.length > 0) {\n\n            copy = isAvailabilityOptions(copy, filterOptions.country, 'country')\n        }\n\n        if (filterOptions.material.length > 0) {\n\n            copy = isAvailabilityOptions(copy, filterOptions.material, 'material')\n        }\n\n        setCopyData(copy);\n    }\n\n    const isAvailabilityOptions = (data: IClothesService[], filter: string[], option: string) => {\n        type key = keyof IClothesService;\n\n        const temp: IClothesService[] = [];\n\n        for (let i = 0; i < data.length; i++) {\n            let s = data[i][option as key];\n\n            if (filter.includes(String(s))) {\n                temp.push(data[i])\n            }\n        }\n        return temp\n    };\n\n\n    useEffect(() => {\n\n        filterClothers([...productsMan, ...productsWoman]);\n\n    }, [filterOptions, productsMan, productsWoman]);\n\n\n    return (\n        <div className='filter'>\n            <Helmet>\n                <title>Search - Find the best for you</title>\n            </Helmet>\n\n\n            {/* links */}\n            <Breadcrumbs />\n\n            {/* filter Input */}\n            <FilterOptions \n                filterOptions={filterOptions} \n                setFilterOptions={setFilterOptions} />\n            <hr />\n            <div className='filter__filteredProducts'>\n                {\n                    copyData.map((product, i )=> (\n                        <Products key={product.id} product={product} i={i} />\n                    ))\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default FilterPage;\n"],"names":["pathname","useLocation","navigate","useNavigate","className","to","onClick","memo","on","off","type","product","sizeForCart","style","BadgeType","badge","useState","setbadge","changeBadge","useCallback","isCheckId","data","find","el","id","useBadge","useAppSelector","state","BadgeSlice","dispatch","useAppDispatch","useEffect","decrementBadge","removeDataBadge","name","incrementBadge","addDataBadge","size","i","MyButtons","alt_description","src","urls","thumb","srcSet","small","sizes","alt","width","height","loading","price","filterOption","setFilter","map","checked","includes","onChange","e","filterName","target","push","filter","isCheck","filterOptions","setFilterOptions","isOpenFilter","setIsOpenFilter","popUp","setPopUp","setTimeout","prev","value","text","placeholder","min","max","country","material","materials","ProductSlice","productsMan","productsWoman","copyData","setCopyData","isAvailabilityOptions","option","temp","length","s","String","copy","trim","Number","filterClothers","Helmet","Breadcrumbs","Products"],"sourceRoot":""}