{"version":3,"file":"static/js/162.53d0d522.chunk.js","mappings":"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","sources":["components/Breadcrumbs/Breadcrumbs.tsx","components/MyButtons/MyButtons.tsx","Hooks/useBadge.ts","pages/SingleProductPage/BttnSizeAndBuy/BttnSizeAndBuy.tsx","pages/SingleProductPage/Component.tsx","pages/SingleProductPage/SingleProduct.tsx","components/Spinner/Spinner.tsx"],"sourcesContent":["import { Link, useLocation, useNavigate } from 'react-router-dom';\nimport './Breadcrumbs.scss';\n\n\nconst Breadcrumbs = () => {\n    const {pathname} = useLocation();\n    const navigate = useNavigate();\n    console.log('Breadcrumbs rendered');\n    return (\n        <div className='bread'>\n            <Link to={'/'}>Home</Link>\n            /\n            <button onClick={() => navigate(-1)}>\n                Back\n            </button>\n            {\n            pathname !== '/filter' &&\n            <>\n                /\n                <Link to={'/filter'}>\n                    Filter\n                </Link>\n            </>\n            }\n        </div>\n    );\n};\n\nexport default Breadcrumbs;","import { memo } from 'react';\nimport { useBadge } from '../../Hooks/useBadge';\nimport { useAppDispatch, useAppSelector } from '../../Hooks/useDispatch_Selector';\nimport { incrementBadge, decrementBadge, addDataBadge, removeDataBadge } from '../../Slices/BadgeSlice';\nimport { BadgeType, IClothesService } from '../../types/Types';\n\ninterface IProps {\n    on?: string;\n    off?: string;\n    type: BadgeType;\n    product: IClothesService;\n    sizeForCart?: string[];\n}\n\nconst MyButtons = memo(({ on, off, type, product, sizeForCart }: IProps) => {\n    const { isCheckId } = useBadge();\n    const dispatch = useAppDispatch();\n    const data = useAppSelector(state => state.BadgeSlice[type].data);\n\n    const badge = isCheckId(data, product);\n\n    const style = () => {\n        if (type === BadgeType.favorite) {\n            return !badge ? 'bttn__link bttnFavoritesOn' : 'bttn__link bttnFavoritesOff';\n        }\n        if (type === BadgeType.compare) {\n            return !badge ? 'bttn__link bttnCompareOff' : 'bttn__link bttnCompareOn';\n        }\n        if (type === BadgeType.cart) {\n            return !badge ? 'bttnCartOn' : 'bttnCartOff';\n        }\n        return ''; \n    };\n\n    return (\n        !badge ? (\n            <button\n                className={style()}\n                aria-label={type}\n                onClick={() => {\n                    dispatch(incrementBadge(type));\n                    dispatch(addDataBadge({ name: type, data: { ...product, size: sizeForCart } as IClothesService }));\n                }}\n            >\n                {on}\n            </button>\n        ) : (\n            <button\n                className={style()}\n                onClick={() => {\n                    dispatch(decrementBadge(type));\n                    dispatch(removeDataBadge({ name: type, data: product }));\n                }}\n            >\n                {off}\n            </button>\n        )\n    );\n});\n\nexport default MyButtons;\n","import { useCallback } from 'react';\nimport { IClothesService } from '../types/Types';\n\nexport const useBadge = () => {\n    const isCheckId = useCallback((data: IClothesService[], product: IClothesService) => {\n        return data.some(el => el.id === product.id);\n    }, []);\n\n    return { isCheckId };\n};\n","import { memo, useCallback, useState } from 'react';\nimport { useAppSelector } from '../../../Hooks/useDispatch_Selector';\nimport { sizes } from '../../../services/ClothesService';\nimport './Sizes.scss';\nimport MyButtons from '../../../components/MyButtons/MyButtons';\nimport { BadgeType, IClothesService } from '../../../types/Types';\n\ninterface IProps {\n    product: IClothesService\n}\nconst BttnSizeAndBuy = memo(({ product }: IProps) => {\n    const [size, setSize] = useState<string[]>(['S']);\n    \n    const data = useAppSelector(state => state.BadgeSlice.cart.data);\n\n    const isCheckSize = useCallback((size: string) => {\n            setSize(prev => {\n                if (!prev.includes(size)) {\n                    return [...prev, size]\n                } else {\n                    return prev.length > 1 ? prev.filter(el => el !== size) : prev\n                }\n            })\n    }, [setSize]);\n\n\n    const find = data.find(e => e.id === product.id);\n\n    return (\n        <>\n        \n        <div className=\"sizes\">\n            {\n                sizes.map(el => (\n                    <button\n                        disabled={ Boolean(find) }\n                        className={ size.includes(el) ? 'active' : ''}\n                        onClick={() => isCheckSize(el)}\n                        key={el}\n                    >\n                        {el}\n                    </button>\n                ))\n            }\n        </div>\n        <div className='wrap__information__buy'>\n                        <MyButtons\n                            on=\"BUY IT\"\n                            off='REMOVE IT'\n                            type={BadgeType.cart}\n                            product={product}\n                            sizeForCart={size}\n                        />\n                        <MyButtons\n                            type={BadgeType.favorite}\n                            product={product}\n                        />\n                    </div>\n        </>\n    );\n});\n\nexport default BttnSizeAndBuy;","import { BadgeType, IClothesService } from '../../types/Types';\nimport Breadcrumbs from '../../components/Breadcrumbs/Breadcrumbs';\nimport MyButtons from '../../components/MyButtons/MyButtons';\nimport BttnSizeAndBuy from '../../pages/SingleProductPage/BttnSizeAndBuy/BttnSizeAndBuy';\n\ninterface IProps {\n    singleProduct: IClothesService,\n}\n\nconst Component = ({ singleProduct }: IProps) => {\n    \n    \n    return (\n        <>\n            <Breadcrumbs />\n            <div className='wrap'>\n            {/* start photo element */}\n                <div className='wrap__photo'>\n                    <MyButtons\n                        type={BadgeType.compare}\n                        product={singleProduct}\n                    />\n                    <img className='wrap__photo-img' src={singleProduct.urls.regular} alt={singleProduct.alt_description} />\n                </div>\n                {/* End photo element */}\n\n                <div className='wrap__information'>\n                    <div className='wrap__information__preview'>\n                        {/* Price  */}\n                        <p>{singleProduct.alt_description}</p>\n                        <span className='wrap__information__preview-price'>{singleProduct.price} $</span>\n                    </div>\n                    {/* Size */}\n                    <span className='size'>\n                        Choose size:\n                    </span> \n                    <BttnSizeAndBuy\n                        product={singleProduct}\n                    />\n\n                        {/* Buy and likes bttn */}\n                    <hr />\n                    {/* Product characteristic */}\n                    <div className='wrap__information__characteristic'>\n                        <h4>Characteristics</h4>\n                        <div className='wrap__information__characteristic__div'>\n                            <div className='wrap__information__characteristic__div-country'>\n                                <small>Country</small>\n                                <p>{singleProduct.country}</p>\n                            </div>\n                            <div className='wrap__information__characteristic__div-material'>\n                                <small>Material</small>\n                                <p>{singleProduct.material}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {/* end information */}\n        </>\n    );\n};\n\nexport default Component;","import { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from '../../Hooks/useDispatch_Selector';\nimport { fetchClothesForSingleProduct } from '../../Slices/ProductSlice';\nimport { Status } from '../../types/Types';\nimport Spinner from '../../components/Spinner/Spinner';\nimport Component from './Component';\nimport { Helmet } from \"react-helmet\";\nimport './SingleProduct.scss';\n\nconst SingleProduct = () => {\n    const { productId } = useParams();\n    const { singleProduct, statusSingleProduct } = useAppSelector(state => state.ProductSlice);\n    const dispatch = useAppDispatch();\n    \n    useEffect(() => {\n        if (productId !== singleProduct.id) {\n            dispatch(fetchClothesForSingleProduct(String(productId)))\n        }\n    }, [dispatch, productId, singleProduct.id]);\n\n    return (\n        <>\n            <Helmet>\n                <title>{singleProduct.alt_description}</title>\n            </Helmet>\n\n            {statusSingleProduct === Status.loading && <Spinner />}\n            {statusSingleProduct === Status.error && <p> you need to reload page </p>}\n            {statusSingleProduct === Status.idle &&\n                <Component singleProduct={singleProduct} />\n            }\n        </>\n    )\n};\n\nexport default SingleProduct;","\nfunction Spinner() {\n    return (\n           <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            style={{margin: '0 auto', background: 'none', display: 'block'}}\n            width=\"200\"\n            height=\"200\"\n            preserveAspectRatio=\"xMidYMid\"\n            viewBox=\"0 0 100 100\"\n        >\n            <circle\n                cx=\"50\"\n                cy=\"50\"\n                r=\"0\"\n                fill=\"none\"\n                stroke=\"#1d0e0b\"\n                strokeWidth=\"2\"\n            >\n                <animate\n                    attributeName=\"r\"\n                    begin=\"0s\"\n                    calcMode=\"spline\"\n                    dur=\"1.1363636363636365s\"\n                    keySplines=\"0 0.2 0.8 1\"\n                    keyTimes=\"0;1\"\n                    repeatCount=\"indefinite\"\n                    values=\"0;40\"\n                ></animate>\n                <animate\n                    attributeName=\"opacity\"\n                    begin=\"0s\"\n                    calcMode=\"spline\"\n                    dur=\"1.1363636363636365s\"\n                    keySplines=\"0.2 0 0.8 1\"\n                    keyTimes=\"0;1\"\n                    repeatCount=\"indefinite\"\n                    values=\"1;0\"\n                ></animate>\n            </circle>\n            <circle\n                cx=\"50\"\n                cy=\"50\"\n                r=\"0\"\n                fill=\"none\"\n                stroke=\"#774023\"\n                strokeWidth=\"2\"\n            >\n                <animate\n                    attributeName=\"r\"\n                    begin=\"-0.5681818181818182s\"\n                    calcMode=\"spline\"\n                    dur=\"1.1363636363636365s\"\n                    keySplines=\"0 0.2 0.8 1\"\n                    keyTimes=\"0;1\"\n                    repeatCount=\"indefinite\"\n                    values=\"0;40\"\n                ></animate>\n                <animate\n                    attributeName=\"opacity\"\n                    begin=\"-0.5681818181818182s\"\n                    calcMode=\"spline\"\n                    dur=\"1.1363636363636365s\"\n                    keySplines=\"0.2 0 0.8 1\"\n                    keyTimes=\"0;1\"\n                    repeatCount=\"indefinite\"\n                    values=\"1;0\"\n                ></animate>\n            </circle>\n        </svg>\n            );\n}\n\nexport default Spinner;\n"],"names":["Breadcrumbs","pathname","useLocation","navigate","useNavigate","console","log","_jsxs","className","children","_jsx","Link","to","onClick","_Fragment","memo","_ref","on","off","type","product","sizeForCart","isCheckId","useCallback","data","some","el","id","dispatch","useAppDispatch","badge","useAppSelector","state","BadgeSlice","style","BadgeType","favorite","compare","cart","decrementBadge","removeDataBadge","name","incrementBadge","addDataBadge","_objectSpread","size","setSize","useState","isCheckSize","prev","includes","length","filter","find","e","sizes","map","disabled","Boolean","MyButtons","singleProduct","src","urls","regular","alt","alt_description","price","BttnSizeAndBuy","country","material","SingleProduct","productId","useParams","statusSingleProduct","ProductSlice","useEffect","fetchClothesForSingleProduct","String","Helmet","Status","loading","Spinner","error","idle","Component","xmlns","margin","background","display","width","height","preserveAspectRatio","viewBox","cx","cy","r","fill","stroke","strokeWidth","attributeName","begin","calcMode","dur","keySplines","keyTimes","repeatCount","values"],"sourceRoot":""}