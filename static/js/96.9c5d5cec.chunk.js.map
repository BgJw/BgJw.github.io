{"version":3,"file":"static/js/96.9c5d5cec.chunk.js","mappings":"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","sources":["components/Breadcrumbs/Breadcrumbs.tsx","components/MyButtons/MyButtons.tsx","Hooks/useBadge.ts","pages/ComparePage/Component.tsx","pages/ComparePage/ComparePage.tsx"],"sourcesContent":["import { Link, useLocation, useNavigate } from 'react-router-dom';\nimport './Breadcrumbs.scss';\n\n\nconst Breadcrumbs = () => {\n    const {pathname} = useLocation();\n    const navigate = useNavigate();\n    \n    return (\n        <div className='bread'>\n            <Link to={'/'}>Home</Link>\n            /\n            <button onClick={() => navigate(-1)}>\n                Back\n            </button>\n            {\n            pathname !== '/filter' &&\n            <>\n                /\n                <Link to={'/filter'}>\n                    Filter\n                </Link>\n            </>\n            }\n        </div>\n    );\n};\n\nexport default Breadcrumbs;","import { memo, useEffect } from 'react';\nimport { useBadge } from '../../Hooks/useBadge';\nimport { useAppDispatch, useAppSelector } from '../../Hooks/useDispatch_Selector';\nimport { incrementBadge, decrementBadge, addDataBadge, removeDataBadge } from '../../Slices/BadgeSlice';\nimport { BadgeType, IClothesService } from '../../types/Types';\n\ninterface IProps{\n    on?: string,\n    off?: string,\n    type: BadgeType,\n    product: IClothesService,\n    sizeForCart?: string[]\n}\n\nconst MyButtons = memo( ({ on, off, type, product, sizeForCart }: IProps) => {\n    \n    const style = () => { \n        if(type === BadgeType.favorite){\n            return !badge ? 'bttn__link bttnFavoritesOn' : 'bttn__link bttnFavoritesOff';\n        }\n        if(type === BadgeType.compare){\n            return !badge ? 'bttn__link bttnCompareOff' : 'bttn__link bttnCompareOn'\n        }\n        if(type === BadgeType.cart){\n            return !badge ? 'bttnCartOn' : 'bttnCartOff';\n        }\n    }\n    const {badge, isCheckId, changeBadge} = useBadge();\n    const data = useAppSelector(state => state.BadgeSlice[type].data);\n    const dispatch = useAppDispatch();    \n    \n\n    useEffect(()=> { isCheckId(data, product) } , [product])\n    \n\n\n    return (\n        !badge?\n            <button \n                className={ style() }\n                aria-label={type}\n                onClick={ () => {\n                    dispatch(incrementBadge(type))\n                    dispatch(addDataBadge({name: type, data: {...product, size: sizeForCart} as IClothesService}))\n                    changeBadge()\n                }}\n            >\n            {on}\n            </button>\n        :\n            <button \n                className={ style() }\n                onClick={ () => {\n                    dispatch(decrementBadge(type))\n                    dispatch(removeDataBadge({name: type, data: product}))\n                    changeBadge()\n                }}\n            >\n                {off}\n            </button>\n    );\n});\n\nexport default MyButtons;","import {useCallback, useState} from 'react';\nimport { IClothesService } from '../types/Types';\n\nexport const useBadge = ( ) => {\n\n    const [badge, setbadge] = useState<boolean>(false);\n\n    const changeBadge = useCallback(() => setbadge( badge => !badge), []);\n\n    const isCheckId = (data: IClothesService[], product: IClothesService) => { \n          \n            data.find(el => el.id === product.id && changeBadge())\n    };\n\n\n    return {\n        badge,\n        changeBadge,\n        isCheckId\n    }\n};","import { Link } from 'react-router-dom';\nimport { BadgeType, IClothesService } from '../../types/Types';\nimport MyButtons from '../../components/MyButtons/MyButtons';\n\ninterface IProps {\n    el: IClothesService,\n    i: number\n};\n\nconst Component = ({ el, i }: IProps) => {\n\n    return (\n        <div className='compare'>\n            <Link to={`/product/${el.id}`} >\n                <img className='compare__img' src={el.urls.regular} alt={el.alt_description} />\n            </Link>\n            <div className='compare__information'>\n                <p className='compare__information-p'>{el.alt_description}</p>\n               \n                <div className='compare__information-bttn'>\n                        <MyButtons\n                            type={BadgeType.compare}\n                            product={el}\n                        />\n                        <MyButtons\n                            type={BadgeType.favorite}\n                            product={el}\n                        />\n                </div>\n                <div className='compare__information-feather'>\n                    <small>{i === 0 && 'Price'}</small> <p>{el.price} $</p>\n                    <small>{i === 0 && 'Material'}</small> <p> {el.material}</p>\n                    <small>{i === 0 && 'Country'}</small> <p> {el.country}</p>\n\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Component;","import { useAppSelector } from '../../Hooks/useDispatch_Selector';\nimport Component from './Component';\nimport { Helmet } from \"react-helmet\";\nimport './ComparePage.scss';\nimport Breadcrumbs from '../../components/Breadcrumbs/Breadcrumbs';\n\nconst ComparePage = () => {\n    const compare = useAppSelector(state => state.BadgeSlice.compare);\n    \n    return (\n        <>\n            <Helmet>\n                <title>Your Compare</title>\n            </Helmet>\n            <Breadcrumbs />\n            <h2 className='pageName'>Compare</h2>\n            {\n                compare.data.length ?\n                    <div className='container'>\n{                        compare.data.map((el, i) => (\n                        <Component el={el} key={el.id} i={i}/>\n                        ))}\n                    </div>\n                    :\n                    <h3 className='pageEmpty'>Compare list is empty</h3>\n            }\n        </>\n    );\n};\n\nexport default ComparePage;"],"names":["pathname","useLocation","navigate","useNavigate","className","to","onClick","memo","on","off","type","product","sizeForCart","style","BadgeType","badge","useState","setbadge","changeBadge","useCallback","isCheckId","data","find","el","id","useBadge","useAppSelector","state","BadgeSlice","dispatch","useAppDispatch","useEffect","decrementBadge","removeDataBadge","name","incrementBadge","addDataBadge","size","i","src","urls","regular","alt","alt_description","MyButtons","price","material","country","compare","Helmet","Breadcrumbs","length","map"],"sourceRoot":""}