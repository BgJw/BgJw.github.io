{"version":3,"file":"static/js/892.e994b70c.chunk.js","mappings":"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","sources":["components/MyButtons/MyButtons.tsx","Hooks/useBadge.ts","components/Products/Products.tsx","components/Spinner/Spinner.tsx","components/MainContent/FilterButton.tsx","components/Skeleton.tsx","components/MainContent/MainContent.tsx","components/PreviewGallery/PreviewGallery.tsx","pages/HomePage/HomePage.tsx"],"sourcesContent":["import { memo, useEffect } from 'react';\nimport { useBadge } from '../../Hooks/useBadge';\nimport { useAppDispatch, useAppSelector } from '../../Hooks/useDispatch_Selector';\nimport { incrementBadge, decrementBadge, addDataBadge, removeDataBadge } from '../../Slices/BadgeSlice';\nimport { BadgeType, IClothesService } from '../../types/Types';\n\ninterface IProps{\n    on?: string,\n    off?: string,\n    type: BadgeType,\n    product: IClothesService,\n    sizeForCart?: string[]\n}\n\nconst MyButtons = memo( ({ on, off, type, product, sizeForCart }: IProps) => {\n    \n    const style = () => { \n        if(type === BadgeType.favorite){\n            return !badge ? 'bttn__link bttnFavoritesOn' : 'bttn__link bttnFavoritesOff';\n        }\n        if(type === BadgeType.compare){\n            return !badge ? 'bttn__link bttnCompareOff' : 'bttn__link bttnCompareOn'\n        }\n        if(type === BadgeType.cart){\n            return !badge ? 'bttnCartOn' : 'bttnCartOff';\n        }\n    }\n    const {badge, isCheckId, changeBadge} = useBadge();\n    const data = useAppSelector(state => state.BadgeSlice[type].data);\n    const dispatch = useAppDispatch();    \n    \n\n    useEffect(()=> { isCheckId(data, product) } , [product])\n    \n\n\n    return (\n        !badge?\n            <button \n                className={ style() }\n                aria-label={type}\n                onClick={ () => {\n                    dispatch(incrementBadge(type))\n                    dispatch(addDataBadge({name: type, data: {...product, size: sizeForCart} as IClothesService}))\n                    changeBadge()\n                }}\n            >\n            {on}\n            </button>\n        :\n            <button \n                className={ style() }\n                onClick={ () => {\n                    dispatch(decrementBadge(type))\n                    dispatch(removeDataBadge({name: type, data: product}))\n                    changeBadge()\n                }}\n            >\n                {off}\n            </button>\n    );\n});\n\nexport default MyButtons;","import {useCallback, useState} from 'react';\nimport { IClothesService } from '../types/Types';\n\nexport const useBadge = ( ) => {\n\n    const [badge, setbadge] = useState<boolean>(false);\n\n    const changeBadge = useCallback(() => setbadge( badge => !badge), []);\n\n    const isCheckId = (data: IClothesService[], product: IClothesService) => { \n          \n            data.find(el => el.id === product.id && changeBadge())\n    };\n\n\n    return {\n        badge,\n        changeBadge,\n        isCheckId\n    }\n};","import { Link } from 'react-router-dom';\r\nimport './Products.scss';\r\nimport MyButtons from '../MyButtons/MyButtons';\r\nimport { BadgeType, IClothesService } from '../../types/Types';\r\n\r\ninterface IProduct {\r\n    product: IClothesService,\r\n    i: number\r\n}\r\n\r\nconst Products = ({ product, i }: IProduct) => {\r\n\r\n    return (\r\n        <div className='product'>\r\n            <div className='product__img'>\r\n                <MyButtons\r\n                    type={BadgeType.favorite}\r\n                    product={product}\r\n                />\r\n                <Link to={`/product/${product.id}`} aria-label={`View details of ${product.alt_description}`}>\r\n                    <img\r\n                        className='product__img-photo lazy'\r\n                        src={product.urls.thumb}\r\n                        srcSet={`\r\n                            ${product.urls.thumb} 600w,\r\n                            ${product.urls.small} 900w,\r\n                        `}\r\n                        sizes=\"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw\"\r\n                        alt={product.alt_description}\r\n                        width={200}\r\n                        height={300}\r\n                        loading={ i < 6 ? 'eager' : 'lazy'}\r\n                    />\r\n                </Link>\r\n            </div>\r\n\r\n            <div className='product__preview'>\r\n                <div className='product__preview-title'>{product.alt_description}</div>\r\n                <div className='product__preview-buy'>\r\n                    <p>{product.price} $</p>\r\n                    <Link to={`/product/${product.id}`} aria-label='add to cart' />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Products;\r\n","\nfunction Spinner() {\n    return (\n           <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            style={{margin: '0 auto', background: 'none', display: 'block'}}\n            width=\"200\"\n            height=\"200\"\n            preserveAspectRatio=\"xMidYMid\"\n            viewBox=\"0 0 100 100\"\n        >\n            <circle\n                cx=\"50\"\n                cy=\"50\"\n                r=\"0\"\n                fill=\"none\"\n                stroke=\"#1d0e0b\"\n                strokeWidth=\"2\"\n            >\n                <animate\n                    attributeName=\"r\"\n                    begin=\"0s\"\n                    calcMode=\"spline\"\n                    dur=\"1.1363636363636365s\"\n                    keySplines=\"0 0.2 0.8 1\"\n                    keyTimes=\"0;1\"\n                    repeatCount=\"indefinite\"\n                    values=\"0;40\"\n                ></animate>\n                <animate\n                    attributeName=\"opacity\"\n                    begin=\"0s\"\n                    calcMode=\"spline\"\n                    dur=\"1.1363636363636365s\"\n                    keySplines=\"0.2 0 0.8 1\"\n                    keyTimes=\"0;1\"\n                    repeatCount=\"indefinite\"\n                    values=\"1;0\"\n                ></animate>\n            </circle>\n            <circle\n                cx=\"50\"\n                cy=\"50\"\n                r=\"0\"\n                fill=\"none\"\n                stroke=\"#774023\"\n                strokeWidth=\"2\"\n            >\n                <animate\n                    attributeName=\"r\"\n                    begin=\"-0.5681818181818182s\"\n                    calcMode=\"spline\"\n                    dur=\"1.1363636363636365s\"\n                    keySplines=\"0 0.2 0.8 1\"\n                    keyTimes=\"0;1\"\n                    repeatCount=\"indefinite\"\n                    values=\"0;40\"\n                ></animate>\n                <animate\n                    attributeName=\"opacity\"\n                    begin=\"-0.5681818181818182s\"\n                    calcMode=\"spline\"\n                    dur=\"1.1363636363636365s\"\n                    keySplines=\"0.2 0 0.8 1\"\n                    keyTimes=\"0;1\"\n                    repeatCount=\"indefinite\"\n                    values=\"1;0\"\n                ></animate>\n            </circle>\n        </svg>\n            );\n}\n\nexport default Spinner;\n","import React from 'react';\nimport { Name } from '../../types/Types';\nimport { useAppDispatch, useAppSelector } from '../../Hooks/useDispatch_Selector';\nimport { changeActiveFilter } from '../../Slices/ProductSlice';\n\ninterface IProps {\n    name: Name\n}\n\nconst FilterButton = ({name}: IProps) => {\n    const dispatch = useAppDispatch();\n    const activeFilter = useAppSelector(state => state.ProductSlice.activeFilter);\n\n    return (\n        <button\n            disabled={activeFilter === name}\n            onClick={() => {\n                dispatch(changeActiveFilter(name))\n            }}\n            className={`content__filter-button ${activeFilter === name && 'active'}`}>\n            {name.toUpperCase()}\n        </button>\n    );\n};\n\nexport default FilterButton;","import './Skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <div className=\"skeleton\">\r\n            <div className=\"skeleton__image\"></div>\r\n            <div className=\"skeleton__text\"></div>\r\n            <div className=\"skeleton__text small\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Skeleton;\r\n","import {useAppDispatch, useAppSelector } from '../../Hooks/useDispatch_Selector';\nimport { IClothesService, Status } from '../../types/Types';\nimport FilterButton from './FilterButton';\nimport Products from '../Products/Products';\nimport './MainContent.scss';\nimport Skeleton from '../Skeleton';\nimport { useEffect } from 'react';\nimport { fetchClothesForMan, fetchClothesForWoman } from '../../Slices/ProductSlice';\n\n\n\nconst MainContent = () => {\n    const { productsMan, productsWoman, activeFilter, statusMan, statusWoman } = useAppSelector(state => state.ProductSlice);\n    const dispatch = useAppDispatch();\n    \n    useEffect(()=> {\n        if(activeFilter === 'man'){\n            dispatch(fetchClothesForMan());\n        }\n        else if(activeFilter === 'woman'){\n            dispatch(fetchClothesForWoman());\n        }\n      }, [activeFilter]);\n\n    \n\n    const filterProduct = (products: IClothesService[]): JSX.Element[] => {\n        return products.map( (product, i) => (\n            <Products key={product.id} product={product} i={i}/>\n        ))\n    }\n    const renderSkeletons = () => {\n        return Array.from({ length: 6 }).map((_, i) => <Skeleton key={i} />);\n    };\n\n    return (\n        <main className='content'>\n            {/* filter content  */}\n            <div className='content__filter'>\n                <FilterButton name={'man'} />\n                <FilterButton name={'woman'} />\n            </div>\n            \n             {/* Product content */}\n             {(statusMan === Status.error || statusWoman === Status.error) && <p>You need to reload the page</p>}\n\n            <div className=\"content__products\">\n                {statusMan === Status.loading || statusWoman === Status.loading\n                    ? renderSkeletons()\n                    : activeFilter === 'man'\n                    ? statusMan === Status.idle && filterProduct(productsMan)\n                    : statusWoman === Status.idle && filterProduct(productsWoman)}\n            </div>\n        </main>\n    );\n};\n\nexport default MainContent;","import { memo, useEffect } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../../Hooks/useDispatch_Selector';\r\nimport { showModal, setModalMainPhoto, fetchClothes } from '../../Slices/PreviewGallerySlice';\r\nimport { Status } from '../../types/Types';\r\nimport Spinner from '../Spinner/Spinner';\r\nimport './PreviewGallery.scss';\r\n\r\nconst PreviewGallery = memo(() => {\r\n    const dispatch = useAppDispatch();\r\n    const clothesList = useAppSelector(state => state.PreviewGallerySlice.clothesList);\r\n    const status = useAppSelector(state => state.PreviewGallerySlice.status);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchClothes());\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"gallery\">\r\n            {status === Status.loading && (\r\n                <div className=\"gallery__status\">\r\n                    <Spinner />\r\n                </div>\r\n            )}\r\n\r\n            {status === Status.error && (\r\n                <div className=\"gallery__status\">\r\n                    <p>Pls reload page</p>\r\n                </div>\r\n            )}\r\n\r\n            {status === Status.idle && (\r\n                <div className=\"gallery__panel\">\r\n                    {clothesList.map((photo, i) => (\r\n                        <div key={photo.id} className=\"gallery__panel__item\">\r\n                            <img\r\n                                className=\"gallery__panel__item-img lazy\"\r\n                                onClick={() => {\r\n                                    dispatch(showModal());\r\n                                    dispatch(setModalMainPhoto(i));\r\n                                }}\r\n                                src={photo.urls.thumb}\r\n                                data-src={photo.urls.small}\r\n                                alt={photo.alt_description}\r\n                                width={200}\r\n                                height={240}\r\n                                loading=\"lazy\"\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default PreviewGallery;\r\n","import MainContent from \"../../components/MainContent/MainContent\";\nimport PreviewGallery from \"../../components/PreviewGallery/PreviewGallery\";\n\nimport { Helmet } from \"react-helmet\";\nconst HomePage = () => {\n\n\n    return (\n        <>\n            <Helmet>\n                <title>O Stories</title>\n            </Helmet>\n\n            <PreviewGallery />\n            <MainContent />\n        </>\n    );\n};\n\nexport default HomePage;"],"names":["memo","on","off","type","product","sizeForCart","style","BadgeType","badge","useState","setbadge","changeBadge","useCallback","isCheckId","data","find","el","id","useBadge","useAppSelector","state","BadgeSlice","dispatch","useAppDispatch","useEffect","className","onClick","decrementBadge","removeDataBadge","name","incrementBadge","addDataBadge","size","i","MyButtons","to","alt_description","src","urls","thumb","srcSet","small","sizes","alt","width","height","loading","price","xmlns","margin","background","display","preserveAspectRatio","viewBox","cx","cy","r","fill","stroke","strokeWidth","attributeName","begin","calcMode","dur","keySplines","keyTimes","repeatCount","values","activeFilter","ProductSlice","disabled","changeActiveFilter","toUpperCase","productsMan","productsWoman","statusMan","statusWoman","fetchClothesForMan","fetchClothesForWoman","filterProduct","products","map","Products","Status","Array","from","length","_","clothesList","PreviewGallerySlice","status","fetchClothes","Spinner","photo","showModal","setModalMainPhoto","Helmet"],"sourceRoot":""}