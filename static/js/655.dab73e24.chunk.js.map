{"version":3,"file":"static/js/655.dab73e24.chunk.js","mappings":"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","sources":["components/MyButtons/MyButtons.tsx","Hooks/useBadge.ts","components/MainContent/FilterButton.tsx","components/Skeleton.tsx","components/MainContent/MainContent.tsx","components/PreviewGallery/PreviewGallery.tsx","pages/HomePage/HomePage.tsx","components/Spinner/Spinner.tsx","components/Products/Products.tsx"],"sourcesContent":["import { memo } from 'react';\nimport { useBadge } from '../../Hooks/useBadge';\nimport { useAppDispatch, useAppSelector } from '../../Hooks/useDispatch_Selector';\nimport { incrementBadge, decrementBadge, addDataBadge, removeDataBadge } from '../../Slices/BadgeSlice';\nimport { BadgeType, IClothesService } from '../../types/Types';\n\ninterface IProps {\n    on?: string;\n    off?: string;\n    type: BadgeType;\n    product: IClothesService;\n    sizeForCart?: string[];\n}\n\nconst MyButtons = memo(({ on, off, type, product, sizeForCart }: IProps) => {\n    const { isCheckId } = useBadge();\n    const dispatch = useAppDispatch();\n    const data = useAppSelector(state => state.BadgeSlice[type].data);\n\n    const badge = isCheckId(data, product);\n\n    const style = () => {\n        if (type === BadgeType.favorite) {\n            return !badge ? 'bttn__link bttnFavoritesOn' : 'bttn__link bttnFavoritesOff';\n        }\n        if (type === BadgeType.compare) {\n            return !badge ? 'bttn__link bttnCompareOff' : 'bttn__link bttnCompareOn';\n        }\n        if (type === BadgeType.cart) {\n            return !badge ? 'bttnCartOn' : 'bttnCartOff';\n        }\n        return ''; \n    };\n\n    return (\n        !badge ? (\n            <button\n                className={style()}\n                aria-label={type}\n                onClick={() => {\n                    dispatch(incrementBadge(type));\n                    dispatch(addDataBadge({ name: type, data: { ...product, size: sizeForCart } as IClothesService }));\n                }}\n            >\n                {on}\n            </button>\n        ) : (\n            <button\n                className={style()}\n                onClick={() => {\n                    dispatch(decrementBadge(type));\n                    dispatch(removeDataBadge({ name: type, data: product }));\n                }}\n            >\n                {off}\n            </button>\n        )\n    );\n});\n\nexport default MyButtons;\n","import { useCallback } from 'react';\nimport { IClothesService } from '../types/Types';\n\nexport const useBadge = () => {\n    const isCheckId = useCallback((data: IClothesService[], product: IClothesService) => {\n        return data.some(el => el.id === product.id);\n    }, []);\n\n    return { isCheckId };\n};\n","import { Name } from '../../types/Types';\nimport { useAppDispatch, useAppSelector } from '../../Hooks/useDispatch_Selector';\nimport { changeActiveFilter } from '../../Slices/ProductSlice';\n\ninterface IProps {\n    name: Name\n}\n\nconst FilterButton = ({name}: IProps) => {\n    const dispatch = useAppDispatch();\n    const activeFilter = useAppSelector(state => state.ProductSlice.activeFilter);\n\n    return (\n        <button\n            disabled={activeFilter === name}\n            onClick={() => {\n                dispatch(changeActiveFilter(name))\n            }}\n            className={`content__filter-button ${activeFilter === name && 'active'}`}>\n            {name.toUpperCase()}\n        </button>\n    );\n};\n\nexport default FilterButton;","import './Skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <div className=\"skeleton\">\n            <div className=\"skeleton__image\"></div>\n            <div className=\"skeleton__text small\"></div>\n        </div>\n    );\n};\n\nexport default Skeleton;\n","import {useAppDispatch, useAppSelector } from '../../Hooks/useDispatch_Selector';\nimport { IClothesService, Status } from '../../types/Types';\nimport FilterButton from './FilterButton';\nimport Products from '../Products/Products';\nimport './MainContent.scss';\nimport Skeleton from '../Skeleton';\nimport { useEffect } from 'react';\nimport { fetchClothesForMan, fetchClothesForWoman } from '../../Slices/ProductSlice';\n\n\n\nconst MainContent = () => {\n    const { productsMan, productsWoman, activeFilter, statusMan, statusWoman } = useAppSelector(state => state.ProductSlice);\n    const dispatch = useAppDispatch();\n        console.log('rendered');\n    useEffect(() => {\n    if (activeFilter === 'man' && (productsMan.length === 0 && statusMan === Status.idle)) {\n    dispatch(fetchClothesForMan());\n    } else if (activeFilter === 'woman' && (productsWoman.length === 0 && statusWoman === Status.idle)) {\n    dispatch(fetchClothesForWoman());\n    }\n    }, [activeFilter, dispatch, productsMan.length, productsWoman.length, statusMan, statusWoman]);\n\n\n\n\n    const filterProduct = (products: IClothesService[]): JSX.Element[] => {\n        return products.map( (product, i) => (\n            <Products key={product.id} product={product} i={i}/>\n        ))\n    }\n    const renderSkeletons = () => {\n        return Array.from({ length: 10 }).map((_, i) => <Skeleton key={i} />);\n    };\n\n    return (\n        <main className='content'>\n            {/* filter content  */}\n            <div className='content__filter'>\n                <FilterButton name={'man'} />\n                <FilterButton name={'woman'} />\n            </div>\n            \n             {/* Product content */}\n             {(statusMan === Status.error || statusWoman === Status.error) && <p>You need to reload the page</p>}\n\n            <div className=\"content__products\">\n                {statusMan === Status.loading || statusWoman === Status.loading\n                    ? renderSkeletons()\n                    : activeFilter === 'man'\n                    ? statusMan === Status.success  && filterProduct(productsMan)\n                    : statusWoman === Status.success  && filterProduct(productsWoman)}\n            </div>\n        </main>\n    );\n};\n\nexport default MainContent;","import { useEffect } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../Hooks/useDispatch_Selector';\nimport { showModal, setModalMainPhoto, fetchClothes } from '../../Slices/PreviewGallerySlice';\nimport { Status } from '../../types/Types';\nimport Spinner from '../Spinner/Spinner';\nimport './PreviewGallery.scss';\n\nconst PreviewGallery = () => {\n    const dispatch = useAppDispatch();\n    const clothesList = useAppSelector(state => state.PreviewGallerySlice.clothesList);\n    const status = useAppSelector(state => state.PreviewGallerySlice.status);\n\n    useEffect(() => {\n        if (status === Status.idle) {\n            dispatch(fetchClothes());            \n        }\n    }, [dispatch, status]);\n\n    return (\n        <div className=\"gallery\">\n            {status === Status.loading && (\n                <div className=\"gallery__status\">\n                    <Spinner />\n                </div>\n            )}\n\n            {status === Status.error && (\n                <div className=\"gallery__status\">\n                    <p>You need reload page</p>\n                </div>\n            )}\n\n            {status === Status.success && (\n                <div className=\"gallery__panel\">\n                    {clothesList.map((photo, i) => (\n                        <div key={photo.id} className=\"gallery__panel__item\">\n                            <img\n                                className=\"gallery__panel__item-img lazy\"\n                                onClick={() => {\n                                    dispatch(showModal());\n                                    dispatch(setModalMainPhoto(i));\n                                }}\n                                src={photo.urls.thumb}\n                                data-src={photo.urls.small}\n                                alt={photo.alt_description}\n                                width={200}\n                                height={240}\n                                loading=\"lazy\"\n                            />\n                        </div>\n                    ))}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default PreviewGallery;\n","import MainContent from \"../../components/MainContent/MainContent\";\nimport PreviewGallery from \"../../components/PreviewGallery/PreviewGallery\";\n\nimport { Helmet } from \"react-helmet\";\nconst HomePage = () => {\n\n\n    return (\n        <>\n            <Helmet>\n                <title>O Stories</title>\n            </Helmet>\n\n            <PreviewGallery />\n            <MainContent />\n        </>\n    );\n};\n\nexport default HomePage;","\nfunction Spinner() {\n    return (\n           <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            style={{margin: '0 auto', background: 'none', display: 'block'}}\n            width=\"200\"\n            height=\"200\"\n            preserveAspectRatio=\"xMidYMid\"\n            viewBox=\"0 0 100 100\"\n        >\n            <circle\n                cx=\"50\"\n                cy=\"50\"\n                r=\"0\"\n                fill=\"none\"\n                stroke=\"#1d0e0b\"\n                strokeWidth=\"2\"\n            >\n                <animate\n                    attributeName=\"r\"\n                    begin=\"0s\"\n                    calcMode=\"spline\"\n                    dur=\"1.1363636363636365s\"\n                    keySplines=\"0 0.2 0.8 1\"\n                    keyTimes=\"0;1\"\n                    repeatCount=\"indefinite\"\n                    values=\"0;40\"\n                ></animate>\n                <animate\n                    attributeName=\"opacity\"\n                    begin=\"0s\"\n                    calcMode=\"spline\"\n                    dur=\"1.1363636363636365s\"\n                    keySplines=\"0.2 0 0.8 1\"\n                    keyTimes=\"0;1\"\n                    repeatCount=\"indefinite\"\n                    values=\"1;0\"\n                ></animate>\n            </circle>\n            <circle\n                cx=\"50\"\n                cy=\"50\"\n                r=\"0\"\n                fill=\"none\"\n                stroke=\"#774023\"\n                strokeWidth=\"2\"\n            >\n                <animate\n                    attributeName=\"r\"\n                    begin=\"-0.5681818181818182s\"\n                    calcMode=\"spline\"\n                    dur=\"1.1363636363636365s\"\n                    keySplines=\"0 0.2 0.8 1\"\n                    keyTimes=\"0;1\"\n                    repeatCount=\"indefinite\"\n                    values=\"0;40\"\n                ></animate>\n                <animate\n                    attributeName=\"opacity\"\n                    begin=\"-0.5681818181818182s\"\n                    calcMode=\"spline\"\n                    dur=\"1.1363636363636365s\"\n                    keySplines=\"0.2 0 0.8 1\"\n                    keyTimes=\"0;1\"\n                    repeatCount=\"indefinite\"\n                    values=\"1;0\"\n                ></animate>\n            </circle>\n        </svg>\n            );\n}\n\nexport default Spinner;\n","import { Link } from 'react-router-dom';\nimport './Products.scss';\nimport MyButtons from '../MyButtons/MyButtons';\nimport { BadgeType, IClothesService } from '../../types/Types';\nimport { memo } from 'react';\n\ninterface IProduct {\n    product: IClothesService,\n    i: number\n}\n\nconst Products = memo(({ product, i }: IProduct) => {\n    return (\n        <div className='product'>\n            <div className='product__img'>\n                <MyButtons\n                    type={BadgeType.favorite}\n                    product={product}\n                />\n                <Link to={`/product/${product.id}`} aria-label={`View details of ${product.alt_description}`}>\n                    <img\n                        className='product__img-photo lazy'\n                        src={product.urls.thumb}\n                        srcSet={`\n                            ${product.urls.thumb} 600w,\n                            ${product.urls.small} 900w,\n                        `}\n                        sizes=\"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw\"\n                        alt={product.alt_description}\n                        width={200}\n                        height={300}\n                        loading={ i < 10 ? 'eager' : 'lazy'}\n                    />\n                </Link>\n            </div>\n\n            <div className='product__preview'>\n                <div className='product__preview-title'>{product.alt_description}</div>\n                <div className='product__preview-buy'>\n                    <p>{product.price} $</p>\n                    <Link to={`/product/${product.id}`} aria-label='add to cart' />\n                </div>\n            </div>\n        </div>\n    );\n});\n\nexport default Products;\n"],"names":["memo","_ref","on","off","type","product","sizeForCart","isCheckId","useCallback","data","some","el","id","dispatch","useAppDispatch","badge","useAppSelector","state","BadgeSlice","style","BadgeType","favorite","compare","cart","_jsx","className","onClick","decrementBadge","removeDataBadge","name","children","incrementBadge","addDataBadge","_objectSpread","size","activeFilter","ProductSlice","disabled","changeActiveFilter","concat","toUpperCase","Skeleton","_jsxs","MainContent","productsMan","productsWoman","statusMan","statusWoman","console","log","useEffect","length","Status","idle","fetchClothesForMan","fetchClothesForWoman","filterProduct","products","map","i","Products","FilterButton","error","loading","Array","from","_","success","PreviewGallery","clothesList","PreviewGallerySlice","status","fetchClothes","Spinner","photo","showModal","setModalMainPhoto","src","urls","thumb","small","alt","alt_description","width","height","HomePage","_Fragment","Helmet","xmlns","margin","background","display","preserveAspectRatio","viewBox","cx","cy","r","fill","stroke","strokeWidth","attributeName","begin","calcMode","dur","keySplines","keyTimes","repeatCount","values","MyButtons","Link","to","srcSet","sizes","price"],"sourceRoot":""}